version: '3.8'

services:
  elasticsearch:
    image: elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 12

  logstash:
    image: logstash:8.12.0
    container_name: logstash
    ports:
      - "5000:5000"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - LOGSTASH_STARTUP=true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 12

  kibana:
    image: kibana:8.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 12

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    env_file:
      - .env
    ports:
      - "50051:50051"
    depends_on:
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_healthy
      kibana:
        condition: service_healthy

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_healthy
      kibana:
        condition: service_healthy
      user-service:
        condition: service_started

volumes:
  esdata: